<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://daniel.feldroy.com/</id>
  <title>Inside the head of Daniel Roy Greenfeld</title>
  <updated>2024-12-12T17:45:18.078742+00:00</updated>
  <author>
    <name>Daniel Roy Greenfeld</name>
    <email>daniel@feldroy.com</email>
    <uri>https://daniel.feldroy.com</uri>
  </author>
  <link href="https://daniel.feldroy.com" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <logo>https://daniel.feldroy.com/images/pydanny-cartwheel.png</logo>
  <rights>All rights reserved 2024, Daniel Roy Greenfeld</rights>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-11-making-pytest-use-ipython's-pdb</id>
    <title>TIL: Making pytest use Ipython's PDB</title>
    <updated>2024-12-12T17:45:18.503307+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;alias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;pdb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pytest --pdb --pdbcls=IPython.terminal.debugger:TerminalPdb&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Usage:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pdb&lt;span class="w"&gt; &lt;/span&gt;tests/test_things::test_broken_thing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-11-making-pytest-use-ipython's-pdb"/>
    <summary>Once I've isolated a test failure to a very small set of failures I use this instead of running pytest directly. What it does on exception is start the IPython pdb interface.</summary>
    <category term="TIL"/>
    <category term="python"/>
    <category term="tests"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-11-13T15:00:14.753658+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-11-litecli-improved-sqlite-cli</id>
    <title>TIL: LiteCLI, Improved SQLite CLI</title>
    <updated>2024-12-12T17:45:18.502805+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;Really useful shell for sqlite, I can't imagine going back to the native shell. &lt;/p&gt;
&lt;p&gt;Can be installed via:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;litecli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Usage:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;litecli&lt;span class="w"&gt; &lt;/span&gt;mydata.db
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enjoy the highlighting, text compleition, and more. If you are interested &lt;a href="https://litecli.com/"&gt;go here to learn more about LiteCLI&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Attribution goes to Audrey Roy Greenfeld.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-11-litecli-improved-sqlite-cli"/>
    <summary>LiteCLI is a  command line interface for SQLite with auto-completion and syntax highlighting.</summary>
    <category term="TIL"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-11-14T22:00:48.492674+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-11-fractional-indexing</id>
    <title>TIL: Fractional Indexing</title>
    <updated>2024-12-12T17:45:18.502390+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;In the past when I've done this for web pages and various other interfaces it has been a mess. I've built ungainly sort order in numeric or alphanumeric batches. Inevitably there is a conflict, often sooner rather than later. So sorting a list of things often means updating all the elements to preserve the order in the datastore. I've learned to mark each element with a big value, but it's ugly and ungainly&lt;/p&gt;
&lt;p&gt;Fortunately for me, going forward, I now know about Fractional Indexing. &lt;/p&gt;
&lt;p&gt;References:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://www.figma.com/blog/realtime-editing-of-ordered-sequences/&lt;/li&gt;
&lt;li&gt;https://observablehq.com/@dgreensp/implementing-fractional-indexing&lt;/li&gt;
&lt;li&gt;https://github.com/httpie/fractional-indexing-python&lt;/li&gt;
&lt;/ul&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-11-fractional-indexing"/>
    <summary>How to keep order of records without having to update all the records</summary>
    <category term="TIL"/>
    <category term="python"/>
    <category term="javascript"/>
    <category term="nodejs"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-11-18T18:27:21.938091+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-11-last-token-in-shell</id>
    <title>TIL: Last Token in Shell</title>
    <updated>2024-12-12T17:45:18.501517+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;To get the last element in a shell command, do this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;!$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To demonstrate usage, let's do a directory list on this website's posts directory:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;ls&lt;span class="w"&gt; &lt;/span&gt;-l&lt;span class="w"&gt; &lt;/span&gt;posts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I can get the last token, which is &lt;code&gt;posts&lt;/code&gt;, by typing:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;!$
posts
zsh:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;found:&lt;span class="w"&gt; &lt;/span&gt;posts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The shell will try to run that token, which as you can see often fails. What's awesome about that is it is now in the shell history, meaning I can easily compose new commands by using the shell history. As I use the rocket-powered &lt;a href="https://atuin.sh/"&gt;Atuin&lt;/a&gt; shell history tool, this means I now have that token easily found at my command line forever. Here's atuin in action - on the line with GLOBAL I've typed in the word 'posts':&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sh
 │ 4 3ms    6d ago mv posts/til-*.md posts/til/
 │ 3 18ms   2d ago git add posts/                                                                                  │
 │ 2 6ms   10m ago ls -l posts                                                                                     │
 │ 1 2ms   10m ago posts                                                                                           │
 │ &amp;gt; 2ms    9m ago ls -asl posts                                                                                   │
 │─────────────────────────────────────────────────────────────────────────────────────────────────────────────────│
 │[    GLOBAL    ] posts&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Using Atuin, I can fetch the last token to my shell without running it, which is a superpower. I can now compose all kinds of stuff off the saved token. Yeah!&lt;/p&gt;
&lt;p&gt;Attribution for this command goes to Jeremy Howard.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-11-last-token-in-shell"/>
    <summary>How to get the last element in a shell command. Guest starring Atuin!</summary>
    <category term="TIL"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-11-21T15:12:54.669148+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-11-python-dictonary-merge-operator</id>
    <title>TIL: Python Dictonary Merge Operator</title>
    <updated>2024-12-12T17:45:18.500353+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;h2 id="the-function-way"&gt;The function way&lt;/h2&gt;
&lt;p&gt;Until today I did this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Make first dict&lt;/span&gt;
&lt;span class="n"&gt;num_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;four&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;five&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;six&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seven&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;nine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# Add second dict&lt;/span&gt;
&lt;span class="n"&gt;num_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="the-operator-way"&gt;The operator way&lt;/h2&gt;
&lt;p&gt;Now thanks to Audrey Roy Greenfeld now I know I can do this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Make first dict while adding second dict&lt;/span&gt;
&lt;span class="n"&gt;num_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;one&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;two&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;three&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;four&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;five&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;six&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;seven&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;eight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;8&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;nine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;9&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num_map&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-11-python-dictonary-merge-operator"/>
    <summary>Did you know there's a merge operator for Python dictionaries? I didn't until today!</summary>
    <category term="TIL"/>
    <category term="python"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-11-29T14:18:22.222177+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-12-defaultdict-takes-a-factory-function</id>
    <title>TIL: Python's defaultdict takes a factory function</title>
    <updated>2024-12-12T17:45:18.489826+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;I've never really paid attention to this object but maybe I should have. It takes a single argument of a callable function. If you put in Python types it sets the default value to those types. For example, if I use an &lt;code&gt;int&lt;/code&gt; at the instantiating argument then it gives us a zero.&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;mydict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mydict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;anykey&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that defaultdict also act like regular dictionaries, in that you can set keys. So &lt;code&gt;mydict['me'] = 'danny'&lt;/code&gt; will work as you expect it to with a standard dictionary.&lt;/p&gt;
&lt;p&gt;It gets more interesting if we pass in a more dynamic function. In the exmaple below we use &lt;code&gt;random.randint&lt;/code&gt; and a &lt;code&gt;lambda&lt;/code&gt; to make the default value be a random number between 1 and 100. &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;random_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's try it out!&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;     &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_values&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;random_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;29&lt;/span&gt;
&lt;span class="mi"&gt;90&lt;/span&gt;
&lt;span class="mi"&gt;56&lt;/span&gt;
&lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="mi"&gt;70&lt;/span&gt;
&lt;span class="n"&gt;defaultdict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mh"&gt;0x72d292bb6de0&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Attribution goes to Laksman Prasad, who pointing this out and encouraging me to closer look at &lt;code&gt;defaultdict&lt;/code&gt;.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-12-defaultdict-takes-a-factory-function"/>
    <summary>Create a dictionary-like object that takes a factory function so you have lots of control over what the default value can be.</summary>
    <category term="TIL"/>
    <category term="python"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-02T22:32:41.336588+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/2024-11-starting-brazilian-jiu-jitsu</id>
    <title>Starting Brazilian Jiu-Jitsu</title>
    <updated>2024-12-12T17:45:18.487495+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;I frequently talk to people who want to try Brazilian Jiu-Jitsu (BJJ). When asked these are some of helpful tips I give to people who want to try it out.&lt;/p&gt;
&lt;h2 id="about-my-experience"&gt;About my experience&lt;/h2&gt;
&lt;p&gt;I've been doing BJJ for over five years now, the last two years intensely. I just got my blue belt. Blue belts normally happen in 1-2 years but I took my time. I have a long, long to black belt, which in BJJ often takes a decade or long. I'm okay with that - I'm all about the journey, not the destination.&lt;/p&gt;
&lt;h2 id="can-you-do-bjj"&gt;Can you do BJJ?&lt;/h2&gt;
&lt;p&gt;Probably. BJJ can be learned and practiced by anyone who can get up and down off the floor under their own power. Even if you struggle with getting to the floor and back up again, it's still something you can learn.&lt;/p&gt;
&lt;p&gt;However, there are people who shouldn't do BJJ. Don't start if you are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pregnant. Brazilian Jiu Jitsu involves a lot of pressure on different body parts. I can't imagine any coach allowing a pregnant woman to start. Please wait until you have finished with the pregnancy and then get on the mat (maybe as part of recovery). &lt;/li&gt;
&lt;li&gt;Are recovering from major injury like broken bones or surgery. These injuries are going to make it impossible for a beginner to make any progress. A good coach will ask you to wait until you are recovered before beginning.&lt;/li&gt;
&lt;li&gt;Sick with a cold or flu - you will be sharing personal space with others. When you do Brazilian Jiu-Jitsu, you spend a lot of time going into the personal space of others. If someone has germs, they are sharing them with the other people they are training with. &lt;/li&gt;
&lt;li&gt;Have a heart condition. Brazilian Jiu-Jitsu is a serious cardio workout. If you have a problem with your heart, avoid BJJ unless you get the okay from a doctor.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Otherwise you can probably do BJJ. People have started in their 70s and 80s! Sure, they aren't fighting hard against 20-somethings, but I've been beaten by some who started at my age who is now in their 80s. How awesome is that?&lt;/p&gt;
&lt;h2 id="selecting-a-school"&gt;Selecting a school&lt;/h2&gt;
&lt;p&gt;How do you pick which school to attend? I'll admit it's a challenge because if you don't know Brazilian Jiu-Jitsu, how do you know that a coach or a teacher is any good? Here's what I look for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Proximity: Can I get there easily enough to train on a regular basis.?&lt;/li&gt;
&lt;li&gt;Schedule: Do they have classes that I can fit into my schedule?&lt;/li&gt;
&lt;li&gt;Beginner-friendly: Will they teach beginners? Most schools are quite beginner-friendly, but it's good to ask. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="getting-in-shape-to-start-at-bjj"&gt;Getting in shape to start at BJJ&lt;/h2&gt;
&lt;p&gt;Sometimes people tell me that they're interested in BJJ but they're not in shape enough. To me, this is kind of silly because BJJ is a great way to get in shape! It is essentially resistance training where the resistance is your own body weight and that of training partners and opponents. Since even the warmups can be fun, techniques are fascinating, and sparring is literally a game, at first you don't even realize you are exerting yourself. &lt;/p&gt;
&lt;p&gt;If you're already in shape, unless you've done wrestling, expect the first few sessions to be an intense workout. Seriously, you're going to be surprised by how much effort you put into rolling on the floor. The amount of strength and cardio you need to use in Brazilian Jiu-Jitsu will catch you by surprise.&lt;/p&gt;
&lt;h2 id="first-classes"&gt;First classes&lt;/h2&gt;
&lt;p&gt;What I tell people just starting out.&lt;/p&gt;
&lt;h3 id="have-good-manners"&gt;Have good manners&lt;/h3&gt;
&lt;p&gt;Good manners are appreciated in BJJ, especially by upper belts and coaches. Bring your best manners to class:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Come bathed recently, wearing anti-perspirant&lt;/li&gt;
&lt;li&gt;Your training clothes should be clean&lt;/li&gt;
&lt;li&gt;When you come in introduce yourself to the coach&lt;/li&gt;
&lt;li&gt;Introduce yourself by name to new partners&lt;/li&gt;
&lt;li&gt;Listen more than you talk&lt;/li&gt;
&lt;li&gt;Thank people for any tip or advice they give you&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: A lot of people think Brazilian Jiu-Jitsu is a modern combat sport thaat rejects traditional martial arts culture. That's not exactly true, there's quite a bit of inherited culture from Japan and Brazil. Also, BJJ arguably predates some traditional martial arts.&lt;/p&gt;
&lt;h3 id="safety"&gt;Safety&lt;/h3&gt;
&lt;p&gt;Brazilian Jiu-Jitsu has a surprisingly low injury rate compared to full-contact striking sports such as Muay Thai, Boxing, MMA, and even Tae Kwon Do. The reason for this is because in BJJ you aren't getting punched or kicked (which usually lands before you can react). In fact, while doing BJJ you can usually tap (quit) before something happens that will hurt you. &lt;/p&gt;
&lt;p&gt;Here are my five golden rules for staying safe on the mat:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If a warmup exercise hurts or feels dangerous, ask the coach for an easier version or skip it.&lt;/li&gt;
&lt;li&gt;Tap early and tap often.&lt;/li&gt;
&lt;li&gt;If you don't understand what's happening to you, tap.&lt;/li&gt;
&lt;li&gt;Switch partners if you are uncomfortable with them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;If you aren't allowed to switch partners with someone who makes you uncomfortable, leave and go to another school.&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Rule number five is really, really important. &lt;strong&gt;No school or coach is worth risking your health.&lt;/strong&gt; There's enough BJJ schools around that you should be able to find a place that doesn't force beginners to train with dangerous opponents.&lt;/p&gt;
&lt;h3 id="recovery"&gt;Recovery&lt;/h3&gt;
&lt;p&gt;After your first class you are going to be exhausted and sore for a few days. You'll feel pain and stiffness in all sorts of new interesting on your body. Don't plan on any heavy exertion until you are recovered. Walking, sauna, and massage will help ease discomfort. Also, up your protein to help your body recover faster.&lt;/p&gt;
&lt;p&gt;You may have a few bruises on your arms or legs. This is normal and will become less common as your body gets used to it.&lt;/p&gt;
&lt;h2 id="cognitive-overload"&gt;Cognitive Overload&lt;/h2&gt;
&lt;p&gt;It is really common for new people in BJJ to feel totally overwhelmed by how much is going on. &lt;/p&gt;
&lt;p&gt;It's common to feel this way at the outset of BJJ training.&lt;/p&gt;
&lt;p&gt;To a grappling beginner there's so much going on that cognitive overload forces people to simply stop moving because they are lost and confused. What it takes to get past this is practice, lots of it. If you show up to class for weeks and months, you will start to learn fundamentals and build up enough muscle memory and knowledge to not feel so overwhelmed.&lt;/p&gt;
&lt;p&gt;How long it takes depends on a lot of variables: the student, the coaches, the environment. &lt;/p&gt;
&lt;p&gt;To summarize:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You are going to be overwhelmed with knowledge.&lt;/li&gt;
&lt;li&gt;This happens to everyone, you aren't stupid.&lt;/li&gt;
&lt;li&gt;It usually takes months to not feel overwhelmed.&lt;/li&gt;
&lt;li&gt;BJJ is a deep art with a lot of stuff going on. At first, everyone is confused and overwhelmed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="what-it-takes-to-become-a-black-belt-in-bjj"&gt;What it takes to become a Black Belt in BJJ&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"A black belt is a white belt who never quit."&lt;/p&gt;
&lt;p&gt;-- Old martial arts saying&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From many years of doing other martial arts I can tell you that the ultimate secret of mastery is to show up. To find joy in learning something new and improving ourselves. In this way, BJJ is no different than other martial arts.&lt;/p&gt;
&lt;h2 id="good-luck"&gt;Good luck!&lt;/h2&gt;
&lt;p&gt;I hope my advice is useful. I've got some &lt;a href="/posts/2023-06-bjj-training-tips"&gt;more advice here&lt;/a&gt;. If you ever want to roll and train with me, I hope we get the chance. I do both gi and nogi, and usually bring at least a rash guard wherever I go. See you on the mat!&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/2024-11-starting-brazilian-jiu-jitsu"/>
    <summary>A guide to getting started in Brazilian Jiu-Jitsu for ages 5 to 100.</summary>
    <category term="bjj"/>
    <category term="martial arts"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-03T19:00:00.945358+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/2024-12-github-admonitions</id>
    <title>GitHub Admonitions</title>
    <updated>2024-12-12T17:45:18.479821+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!NOTE]  &lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Highlights information that users should take into account, even when skimming.&lt;/span&gt;

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!TIP]&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Optional information to help a user be more successful.&lt;/span&gt;

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!IMPORTANT]  &lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Crucial information necessary for users to succeed.&lt;/span&gt;

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!WARNING]  &lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Critical content demanding immediate user attention due to potential risks.&lt;/span&gt;

&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;[!CAUTION]&lt;/span&gt;
&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;Negative potential consequences of an action.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I put this here because it's an easier search for me than the &lt;a href="https://github.com/orgs/community/discussions/16925"&gt;source issue&lt;/a&gt;.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/2024-12-github-admonitions"/>
    <summary>How to elevate a message in GitHub markdown.</summary>
    <category term="github"/>
    <category term="markdown"/>
    <category term="howto"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-05T10:14:19.391773+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-12-how-to-reset-jupyter-notebook-passwords</id>
    <title>TIL: How to reset Jupyter notebook passwords</title>
    <updated>2024-12-12T17:45:18.479503+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jupyter&lt;span class="w"&gt; &lt;/span&gt;notebook&lt;span class="w"&gt; &lt;/span&gt;password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Attribution for this goes to Johno Whitaker.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-12-how-to-reset-jupyter-notebook-passwords"/>
    <summary>For those times when you get locked out of a Jupyter notebook</summary>
    <category term="TIL"/>
    <category term="python"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-05T15:46:26.445473+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/2024-12-top-terminal-tools</id>
    <title>Top Terminal Tools</title>
    <updated>2024-12-12T17:45:18.475976+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;Links in the headers!&lt;/p&gt;
&lt;h1 id="atuin"&gt;&lt;a href="https://atuin.sh/"&gt;Atuin&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The site explains perfectly what it does:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Atuin replaces your existing shell history with a SQLite database, and records additional context for your commands. With this context, Atuin gives you faster and better search of your shell history.&lt;/p&gt;
&lt;p&gt;Additionally, Atuin (optionally) syncs your shell history between all of your machines. Fully end-to-end encrypted, of course.&lt;/p&gt;
&lt;p&gt;You may use either the server I host, or host your own! Or just don’t use sync at all. As all history sync is encrypted, the host can't read your shell history."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even for OSX users, I recommend installing &lt;a href="https://docs.atuin.sh/#quickstart"&gt;following these instructions&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="bat"&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;bat&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;bat&lt;/code&gt; is a &lt;code&gt;cat&lt;/code&gt; clone that supports syntax highlighting for a large number of programming and markup languages. Super handy for quickly reviewing a file. &lt;/p&gt;
&lt;h1 id="tmux"&gt;&lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;tmux is a terminal multiplexer. It lets you switch easily between several programs in one terminal, detach them (they keep running in the background) and reattach them to a different terminal.&lt;/p&gt;
&lt;p&gt;For OSX users, ignore the Tmux's instructions to use &lt;code&gt;port&lt;/code&gt; and install it like this:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;brew&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;tmux
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="shell-sage"&gt;&lt;a href="https://github.com/answerDotAI/shell_sage"&gt;Shell Sage&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;"ShellSage saves sysadmins' sanity by solving shell script snafus super swiftly"&lt;/p&gt;
&lt;p&gt;-- Isaac Flath&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once you get past the tongue twister of an introduction you can enjoy this TMUX-powered AI tool. To help answer your questions Shell Sage uses your shell's context based on your current terminal state. For me this is really nice because I can't remember all the esoteric flags and quirks of the CLI world and for RSI reasons don't like to take my hands away from the keyboard.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://www.answer.ai/posts/2024-12-05-introducing-shell-sage.html"&gt;Answer.AI blog entry&lt;/a&gt; introducing Shell Sage is a nice dive into the history, philosophy, and usage of the tool.&lt;/p&gt;
&lt;h1 id="tokei"&gt;&lt;a href="https://github.com/XAMPPRocky/tokei"&gt;tokei&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Tokei is a program that displays statistics about your code. Tokei will show the number of files, total lines within those files and code, comments, and blanks grouped by language. &lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/2024-12-top-terminal-tools"/>
    <summary>A few incredible tools for making the terminal more useful and fun.</summary>
    <category term="terminal"/>
    <category term="tools"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-09T11:10:39.032418+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/2024-12-takedown-notes</id>
    <title>Takedown notes 2024-12-12</title>
    <updated>2024-12-12T17:45:18.475133+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;h2 id="stance"&gt;Stance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Inline like kendo stance, legs mnot too wide&lt;/li&gt;
&lt;li&gt;Lower like a coiled spring&lt;/li&gt;
&lt;li&gt;lead hand waist-height with palm up, back hand shoulder height&lt;/li&gt;
&lt;li&gt;Keep elbows in&lt;/li&gt;
&lt;li&gt;Move in shuffles, including pivots&lt;/li&gt;
&lt;li&gt;Not dissimilar to wrestling stance and move&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="a-takedown-defense"&gt;A takedown defense&lt;/h2&gt;
&lt;p&gt;One method of many&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When someone does a level change get in the habit of checking with lead hip&lt;/li&gt;
&lt;li&gt;Only works if stance is correct &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="concepts"&gt;Concepts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Sticky foot is analogous to sticky hands&lt;/li&gt;
&lt;li&gt;Elbows in to maintain grips and defende counters&lt;/li&gt;
&lt;li&gt;Russian tie should use minimal movement, arm bar if possible&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="handfighting-set"&gt;Handfighting set&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Opponent goes for collar tie&lt;/li&gt;
&lt;li&gt;Up block to wrist grab&lt;/li&gt;
&lt;li&gt;Inward arm bar on their elbow&lt;/li&gt;
&lt;li&gt;Keep one hand on wrist&lt;/li&gt;
&lt;li&gt;grab opposite hip&lt;/li&gt;
&lt;li&gt;Lock both elbows in&lt;/li&gt;
&lt;li&gt;If opponent resists by circling, let go hip and with other hand catch side of neck in cupped hand&lt;/li&gt;
&lt;li&gt;Place foot outide theirs, use sticky foot 
to sweep&lt;/li&gt;
&lt;/ol&gt;</content>
    <link href="https://daniel.feldroy.com/posts/2024-12-takedown-notes"/>
    <summary>Tricks and tips for takedowns and defenses as provided by Mohammed Yusuf.</summary>
    <category term="bjj"/>
    <category term="martial arts"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-12T15:31:18.962774+00:00</published>
  </entry>
  <entry>
    <id>https://daniel.feldroy.com/posts/til-2024-12-arity</id>
    <title>TIL: Arity</title>
    <updated>2024-12-12T17:45:18.419302+00:00</updated>
    <author>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </author>
    <content type="html">&lt;p&gt;I'm excited to have learned there's a word for the count of arguments to a function/method/class: &lt;a href="https://en.wikipedia.org/wiki/Arity"&gt;arity&lt;/a&gt;. Throughout my career I would have called this any of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;number_of_args&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;param_count&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;numargs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;intNumberArguments&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to &lt;a href="https://simonwillison.net/"&gt;Simon Willison&lt;/a&gt; for using it in a library or two and making me look up the word.&lt;/p&gt;</content>
    <link href="https://daniel.feldroy.com/posts/til-2024-12-arity"/>
    <summary>In logic, mathematics, and computer science, arity is the number of arguments or operands taken by a function, operation or relation.</summary>
    <category term="TIL"/>
    <category term="python"/>
    <contributor>
      <name>Daniel Roy Greenfeld</name>
      <email>daniel@feldroy.com</email>
    </contributor>
    <published>2024-12-12T17:10:12.333293+00:00</published>
  </entry>
</feed>
